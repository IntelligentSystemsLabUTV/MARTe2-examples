/**
 * @file RTApp-OPCUA-Server.cfg
 * @author Alessandro Tenaglia
 * @date 6 February, 2022
 * @brief Configuration file for a MARTe app
 */

+OPCUATypes = {
	Class = ReferenceContainer
	+SYS = {
		Class = IntrospectionStructure
		Data = {
			Type = float32
			NumberOfElements = 1
		}
		Status = {
			Type = uint32
			NumberOfElements = 1
		}
		
	}
	+SYSTEMS = {
		Class = IntrospectionStructure
        CLI_01 = {
            Type = SYS
            NumberOfElements = 1
        }
        CLI_02 = {
            Type = SYS
            NumberOfElements = 1
        }
        MAIN = {
            Type = SYS
            NumberOfElements = 1
        }
	}
}

/* OPCUA server */
+OPCUAServer = {
	Class = OPCUA::OPCUAServer
	Port = 4840
	CPUMask = 0x2
	AddressSpace = {
		SYSTEMS = {
			Type = SYSTEMS
		}
	}
}

/* Real-Time Application */
$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 1
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }                
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }            
            }
        }
        +GAMLogger = {
            Class = IOGAM            
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = float32
                }
            } 
            OutputSignals = {
                Counter = {
                    DataSource = Logger
                    Type = uint32
                }
            }
        }        
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
       	}    
       	+Logger = {
            Class = LoggerDataSource
        }  
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = Default
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }      
    }
    +States = {
        Class = ReferenceContainer
        +Idle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer}
                }
            }
        }        
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer GAMLogger}
                }
            }
        }
        +Error = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer}
                }
            }
        }    
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
