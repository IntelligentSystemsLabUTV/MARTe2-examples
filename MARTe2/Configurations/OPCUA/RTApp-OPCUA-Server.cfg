/**
 * @file RTApp-OPCUA-Server.cfg
 * @author Alessandro Tenaglia
 * @date 3 February, 2022
 * @brief Configuration file for a MARTe app
 */

+OPCUATypes = {
	Class = ReferenceContainer
	+FDAQ = {
		Class = IntrospectionStructure
		PulseStart = {
			Type = uint32
			NumberOfElements = 1
		}
		Status = {
			Type = uint32
			NumberOfElements = 1
		}
		
	}
	+AUX = {
		Class = IntrospectionStructure
		FDAQ = {
			Type = FDAQ
			NumberOfElements = 1
		}
	}
	+SYSTEMS = {
		Class = IntrospectionStructure
	        MAK1 = {
			Type =AUX
			NumberOfElements = 1
		}
	        MAKCTRL = {
			Type =AUX
			NumberOfElements = 1
		}
		MAIN_FSA = {
                        Type =AUX
                        NumberOfElements = 1
                }

	}
}

+ServerTest = {
	Class = OPCUA::OPCUAServer
	CPUMask = 0x2
	Port= 4840
	AddressSpace = {
		SYSTEMS = {
			Type = SYSTEMS
		}
		
	}
}

+OPCUA_CA = {
        Class = OPCUAClient::OPCUAClient
        StackSize = 1048576
        CPUs = 0x4
        AutoStart = 1
        Address = "opc.tcp://localhost:4840"
        // Address = "opc.tcp://mosetti.frascati.enea.it:4840"
        // Address = "opc.tcp://localhost:4840"
         +PV_MAK1_COMMAND = {
                Class = OPCUAInterface::OPCUAVariable
                Path = SYSTEMS.MAK1.FDAQ.PulseStart
                Type = uint32
                NameSpaceIndex = 1
                NumberOfElements = 1
        }
        +PV_MAK2_COMMAND = {
                Class = OPCUAInterface::OPCUAVariable
                Path = SYSTEMS.MAKCTRL.FDAQ.PulseStart
                Type = uint32
                NameSpaceIndex = 1
                NumberOfElements = 1
        }
        +PV_STATUS = {
                Class = OPCUAInterface::OPCUAVariable
                Path = SYSTEMS.MAIN_FSA.FDAQ.Status
                Type = uint32
                NameSpaceIndex = 1
                NumberOfElements = 1
        }

        +PV_COMMAND = {
                Class = OPCUAClient::OPCUAVariable
                Path = SYSTEMS.MAIN_FSA.FDAQ.PulseStart
                Type = uint32
                NameSpaceIndex = 1
                NumberOfElements = 1
                Event = {
                    Destination = "StateMachine"
                    PVValue = "Function"
                    FunctionMap = { { "2" "GOTOSTATE2" } { "0" "GOTOSTATE1" } {"1" "RESET"} }
            }
       }
}

+StateMachine = {
    Class = StateMachine
    +INITIAL = {
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = "IDLE"
            NextStateError = "ERROR"
            Timeout = 0
            +ChangeToState1Msg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
    +IDLE = {
        Class = ReferenceContainer
	    +ENTER = {
            Class = ReferenceContainer
            +SetStatusPV = {
                Class = Message
                Destination = "OPCUA_CA.PV_STATUS"
                Function = "OPCUAWrite"
                Mode = ExpectsReply
		        TimeOut = 1000
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 0
                }
            }
        }
        +GOTORUN = {
            Class = StateMachineEvent
            NextState = RUN
            NextStateError = ERROR
            Timeout = 0
 
        
	   +StartSystem1 = {
                Class = "Message"
                Destination = "OPCUA_CA.PV_MAK1_COMMAND"
                Function = "OPCUAWrite"
                Mode = ExpectsReply
                +Parameters = {
                    Class = "ConfigurationDatabase"
                    param1 = 2
                }
            }
           +StartSystem2 = {
                Class = "Message"
                Destination = "OPCUA_CA.PV_MAK2_COMMAND"
                Function = "OPCUAWrite"
                Mode = ExpectsReply
                +Parameters = {
                    Class = "ConfigurationDatabase"
                    param1 = 2
                }
            }

            +PrepareChangeToState2Msg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = State2
                }
            }

            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
        +ERROR = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
        }
    }
    +STATE2 = {
        Class = ReferenceContainer
	   +ENTER = {
            	Class = "ReferenceContainer"
		+SetStatusPV = {
		        Class = "Message"
		        Destination = "OPCUA_CA.PV_STATUS"
		        Function = "OPCUAWrite"
		        Mode = ExpectsReply
		        +Parameters = {
		            Class = "ConfigurationDatabase"
		            param1 = 2
		        }
		}
           }       

	 +GOTOSTATE1 = {
            Class = StateMachineEvent
            NextState = "STATE1"
            NextStateError = "ERROR"
            Timeout = 0



            +StopSystem1 = {
                Class = "Message"
                Destination = "OPCUA_CA.PV_MAK1_COMMAND"
                Function = "OPCUAWrite"
                Mode = ExpectsReply
                +Parameters = {
                    Class = "ConfigurationDatabase"
                    param1 = 0
                }
            }

            +PrepareChangeToState1Msg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = State1
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StopSystem2 = {
                Class = "Message"
                Destination = "OPCUA_CA.PV_MAK2_COMMAND"
                Function = "OPCUAWrite"
                Mode = ExpectsReply
                +Parameters = {
                    Class = "ConfigurationDatabase"
                    param1 = 0
                }
            }

            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }

        }
        +ERROR = {
            Class = StateMachineEvent
            NextState = "ERROR"
            NextStateError = "ERROR"
        }
    }
    +ERROR = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +PrepareChangeToErrorMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = StateError
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
        +RESET = {
            Class = StateMachineEvent
            NextState = "STATE1"
            NextStateError = "STATE1"
            Timeout = 0
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +PrepareChangeToState1Msg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = State1
                }
            }
           +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
}

$TestApp = {
    Class = RealTimeApplication
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    Frequency = 1
                    DataSource = Timer
                    Type = uint32
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }                
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }            
            }
        }
        +GAMLogger = {
            Class = IOGAM            
            InputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }
            } 
            OutputSignals = {
                Counter = {
                    DataSource = Logger
                    Type = uint32
                }
            }
        }
    }
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
       	}    
       	+Logger = {
            Class = LoggerDataSource
        }  
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = "Default"
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }        
    }
    +States = {
        Class = ReferenceContainer
        +Idle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer}
                }
            }
        }        
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer GAMLogger}
                }
            }
        }        
    }
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}