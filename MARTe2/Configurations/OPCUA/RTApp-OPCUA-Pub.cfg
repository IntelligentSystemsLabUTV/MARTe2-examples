/**
 * @file RTApp-OPCUA-Pub.cfg
 * @author Alessandro Tenaglia
 * @date 6 February, 2022
 * @brief Configuration file for a MARTe app
 */

+OPCUA_CA = {
    Class = OPCUAClient::OPCUAClient
    StackSize = 1048576
    CPUs = 0x4
    AutoStart = 1
    Address = "opc.tcp://localhost:2001"
    +PV_STATUS = {
        Class = OPCUAInterface::OPCUAVariable
        Path = SYSTEMS.PUB.Status
        Type = uint32
        NameSpaceIndex = 1
        NumberOfElements = 1
    }
    +PV_COMMAND = {
        Class = OPCUAClient::OPCUAVariable
        Path = SYSTEMS.PUB.PulseStart
        Type = uint32
        NameSpaceIndex = 1
        NumberOfElements = 1
        Event = {
            Destination = StateMachine
            PVValue = Function
            FunctionMap = { { "0" "GOTOIDLE" } { "1" "GOTORUN" } {"2" "RESET"} }
        }
    }
}

/* State Machine */
+StateMachine = {
    Class = StateMachine
    /* INITIAL */
    +INITIAL = {
        Class = ReferenceContainer
        +START = {
            Class = StateMachineEvent
            NextState = IDLE
            NextStateError = ERROR
            Timeout = 0
            +PrepareChangeToIdleMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
    /* IDLE */
    +IDLE = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +SetStatusPV = {
                Class = Message
                Destination = OPCUA_CA.PV_STATUS
                Function = OPCUAWrite
                Mode = ExpectsReply
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 0
                }
            }
        }
        +GOTORUN = {
            Class = StateMachineEvent
            NextState = RUN
            NextStateError = ERROR
            Timeout = 0
            +PrepareChangeToRunMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Run
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
        +GOTOERROR = {
            Class = StateMachineEvent
            NextState = ERROR
            NextStateError = ERROR
        }
    }
    /* RUN */
    +RUN = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +SetStatusPV = {
                Class = Message
                Destination = OPCUA_CA.PV_STATUS
                Function = OPCUAWrite
                Mode = ExpectsReply
                TimeOut = 0
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 1
                }
            }
        }
        +GOTOIDLE = {
            Class = StateMachineEvent
            NextState = IDLE
            NextStateError = ERROR
            Timeout = 0
            +PrepareChangeToIdleMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
        +GOTOERROR = {
            Class = StateMachineEvent
            NextState = ERROR
            NextStateError = ERROR
        }
    }
    /* ERROR */
    +ERROR = {
        Class = ReferenceContainer
        +ENTER = {
            Class = ReferenceContainer
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +PrepareChangeToErrorMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Error
                }
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
            +SetStatusPV = {
                Class = Message
                Destination = OPCUA_CA.PV_STATUS
                Function = OPCUAWrite
                Mode = ExpectsReply
                TimeOut = 0
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = 2
                }
		    }
        }
        +RESET = {
            Class = StateMachineEvent
            NextState = IDLE
            NextStateError = ERROR
            Timeout = 0
            +PrepareChangeToIdleMsg = {
                Class = Message
                Destination = TestApp
                Mode = ExpectsReply
                Function = PrepareNextState
                +Parameters = {
                    Class = ConfigurationDatabase
                    param1 = Idle
                }
            }
            +StopCurrentStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StopCurrentStateExecution
                Mode = ExpectsReply
            }
            +StartNextStateExecutionMsg = {
                Class = Message
                Destination = TestApp
                Function = StartNextStateExecution
                Mode = ExpectsReply
            }
        }
    }
}

/* Real-Time Applcation */
$TestApp = {
    Class = RealTimeApplication
    /* GAMs */
    +Functions = {
        Class = ReferenceContainer
        /* Timer */
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    DataSource = Timer
                    Type = uint32
                    Frequency = 1
                }
            }
            OutputSignals = {
                Counter = {
                    DataSource = DDB1
                    Type = uint32
                }                
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }            
            }
        }
        /* Sin Waveform */
        +GAMWaveSin = {
            Class = WaveformGAM::WaveformSin
            Amplitude = 1.0
            Frequency = 0.1
            Phase = 0.0
            Offset = 0.0
            InputSignals = {
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
            } 
            OutputSignals = {
                Sin = {
                    DataSource = DDB1
                    Type = float32
                }
            }
        }
        /* Publisher */
        +GAMPub = {
            Class = IOGAM            
            InputSignals = {
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
                Sin = {
                    DataSource = DDB1
                    Type = float32
                }
            } 
            OutputSignals = {
                Time = {
                    DataSource = SDNPub
                    Type = uint32
                }
                Sin = {
                    DataSource = SDNPub
                    Type = float32
                    Trigger = 1
                }
            }
        }
        /* Logger */
        +GAMLogger = {
            Class = IOGAM            
            InputSignals = {
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
                Sin = {
                    DataSource = DDB1
                    Type = float32
                }
            } 
            OutputSignals = {
                Time = {
                    DataSource = Logger
                    Type = uint32
                }
                Sin = {
                    DataSource = Logger
                    Type = float32
                }
            }
        }
    }
    /* Datasources */
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }
        +Logger = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = Default
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
        +SDNPub = {
            Class = SDN::SDNPublisher
            Topic = "pubsubwr"
            Interface = "eth0"
            Address = "225.168.255.255:1927"
            Signals = {
                Time = {
                    Type = uint32
                }
                Sin = {
                    Type = float32
                }
            }
        }
    }
    /* RTApp States */
    +States = {
        Class = ReferenceContainer
        /* Idle */
        +Idle = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer}
                }
            }
        }
        /* Run */
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer GAMWaveSin GAMPub GAMLogger}
                }
            }
        }
        /* Error */
        +Error = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer}
                }
            }
        }
    }
    /* Scheduler */
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
