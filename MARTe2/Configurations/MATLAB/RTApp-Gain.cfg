// Real-Time Application: Gain
//
// Alessandro Tenaglia <alessandro.tenaglia42@gmail.com>
//
// May 8, 2022

// Command to execute the RT App:
// sudo ./MARTeApp.sh -l RealTimeLoader -f Configurations/Logger/RTApp-Gain.cfg -s Run

// RT App
$TestApp = {
    Class = RealTimeApplication
    // GAMs
    +Functions = {
        Class = ReferenceContainer
        +GAMTimer = {
            Class = IOGAM
            InputSignals = {
                Counter = {
                    DataSource = Timer
                    Type = uint32
                }
                Time = {
                    DataSource = Timer
                    Type = uint32
                    Frequency = 1
                }
            }
            OutputSignals = {
                Input1 = {
                    DataSource = DDB1
                    Type = uint32
                }
                Time = {
                    DataSource = DDB1
                    Type = uint32
                }
            }
        }
	    +GAMGain = {
	        Class = SimulinkWrapperGAM
	        Library = Gain.so
	        SymbolPrefix = Gain
            InputSignals = {
                Input1 = {
                    DataSource = DDB1
                    Type = int32
                }
            }
            OutputSignals = {
                Output1 = {
                    DataSource = DDB1
                    Type = int32
                }
            }
            Parameters = {
                Param1 = (int32) 2
            }
	    }
        +GAMLogger = {
            Class = IOGAM
            InputSignals = {
                Input1 = {
                    DataSource = DDB1
                    Type = int32
                }
                Output1 = {
                    DataSource = DDB1
                    Type = int32
                }
            }
            OutputSignals = {
                Input1 = {
                    DataSource = Logger
                    Type = int32
                }
                Output1 = {
                    DataSource = Logger
                    Type = int32
                }
            }
        }
    }
    // Data Sources
    +Data = {
        Class = ReferenceContainer
        DefaultDataSource = DDB1
        +DDB1 = {
            Class = GAMDataSource
        }
        +Logger = {
            Class = LoggerDataSource
        }
        +Timings = {
            Class = TimingDataSource
        }
        +Timer = {
            Class = LinuxTimer
            SleepNature = Default
            Signals = {
                Counter = {
                    Type = uint32
                }
                Time = {
                    Type = uint32
                }
            }
        }
    }
    // RT States
    +States = {
        Class = ReferenceContainer
        +Run = {
            Class = RealTimeState
            +Threads = {
                Class = ReferenceContainer
                +Thread1 = {
                    Class = RealTimeThread
                    CPUs = 0x8
                    Functions = {GAMTimer GAMGain GAMLogger}
                }
            }
        }
    }
    // Scheduler
    +Scheduler = {
        Class = GAMScheduler
        TimingDataSource = Timings
    }
}
